user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
   worker_connections 1024;
}

http {
   log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

   access_log  /var/log/nginx/access.log  main;

   sendfile            on;
   tcp_nopush          on;
   tcp_nodelay         on;
   keepalive_timeout   65;
   types_hash_max_size 2048;

   include             /etc/nginx/mime.types;
   default_type        application/octet-stream;

   # Load modular configuration files from the /etc/nginx/conf.d directory.
   # See http://nginx.org/en/docs/ngx_core_module.html#include
   # for more information.
   include /etc/nginx/conf.d/*.conf;

   server {
   listen 80;
   server_name {{cockpit_url}};

   return 301 https://$host$request_uri;
   }

   server {
       listen 443 ssl;
       server_name {{cockpit_url}};

       ssl_certificate /etc/letsencrypt/live/{{inventory_hostname}}/fullchain.pem;
       ssl_certificate_key  /etc/letsencrypt/live/{{inventory_hostname}}/privkey.pem;

       location / {
               # Required to proxy the connection to Cockpit
               proxy_pass https://127.0.0.1:9090;
               proxy_set_header Host $host;
               proxy_set_header X-Forwarded-Proto $scheme;

               # Required for web sockets to function
               proxy_http_version 1.1;
               proxy_buffering off;
               proxy_set_header Upgrade $http_upgrade;
               proxy_set_header Connection "upgrade";

               # Pass ETag header from Cockpit to clients.
               # See: https://github.com/cockpit-project/cockpit/issues/5239
               gzip off;
       }
   }
}
